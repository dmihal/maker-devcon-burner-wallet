/*
 * Project values
 */

$colorPrimary: #f77423;
$colorPrimarySupport: #fbce5b;
$colorSecondary: #005cff;
$colorSecondarySupport: #0099ff;
$colorBackground: #f8faff; //#f3f8fa;

$colorBorder: #ebf0ff;
$colorDark: #1f2133;
$colorHighlight: darken($colorBackground, 0.5%); // #f5f7fc;

$sizeCanvasMaxWidth: 1200px;
$sizeNavHeight: 68px;
$sizeCanvasPadding: 20px;
$sizeCanvasPaddingMini: 15px;

$fontPrimary: "Catamaran", -apple-system, BlinkMacSystemFont, "Segoe UI", "Roboto", sans-serif;
$fontSecondary: "Roboto Mono", "Catamaran", -apple-system, BlinkMacSystemFont, "Segoe UI", "Roboto", sans-serif;

$zIndexNav: 100;
$zIndexOverlay: 105;
$zIndexCover: 110;
$zIndexModal: 200;
$zIndexPage: 104;

$sizeFontPageTitle: 16pt;
$sizeFontSectionTitle: 14pt;
$sizeFontSectionSubtitle: 12pt;
$sizeFontContent: 10pt;
$sizeFontButtonDefault: $sizeFontContent;

$sizeModalPadding: 30px;
$sizeModalMaxWidth: 800px;
$sizeModalMiniMaxWidth: 600px;
$sizeModalLargeMaxWidth: $sizeCanvasMaxWidth;
$sizeModalBorderRadius: 30px;

$sizeWatcherTabs: 80px;
/**
 * Colors
 */

$colorTable_Blue1: #04befe;
$colorTable_Blue2: #03a0dc;
$colorTable_Purple1: #7f00ff;
$colorTable_Purple2: #e100ff;
$colorTable_Red1: #f44336;
$colorTable_Green1: #4caf50;
$colorTable_Yellow1: #ffeb3b;
$colorTable_Orange1: #ff9800;

$colorTable_GrayBlue_Black: #40474f;
$colorTable_GrayBlue_Dark: #8b9aac;
$colorTable_GrayBlue_Light: #e4e8f0;
$colorTable_GrayBlue_DarkText: $colorTable_GrayBlue_Dark;

$colorProfileCanvasBorder: lighten($colorTable_GrayBlue_Light, 5%); //#f5f5f5;

/**
 * Sizes
 */
$col-canvas: $sizeCanvasMaxWidth;
$col-lg-extended: 1100px;
$col-lg: 992px;
$col-md: 768px;
$col-sm: 500px;

$tablet-big: "all and (max-width : #{$col-lg-extended}) and (min-width : #{$col-lg  + 1})";
$tablet: "all and (max-width : #{$col-lg}) and (min-width : #{$col-md  + 1})";
$mobile-big: "all and (max-width : #{$col-md}) and (min-width : #{$col-sm  + 1})";
$mobile: "all and (max-width : #{$col-sm})";

$top-canvas-big: "all and (max-width : #{$col-canvas})";
$top-tablet-big: "all and (max-width : #{$col-lg-extended})";
$top-tablet: "all and (max-width : #{$col-lg})";
$top-mobile-big: "all and (max-width : #{$col-md})";
$bottom-mobile-big: "all and (min-width : #{$col-md + 1})";
$top-mobile: "all and (max-width : #{$col-sm})";

$top-sizer-m: $top-tablet-big;
$top-sizer-s: $top-mobile-big;

$sizeTopM: $col-lg-extended;
$sizeTopS: $col-md;

:export {
  colorPrimary: $colorPrimary;
  colorPrimarySupport: $colorPrimarySupport;
  colorSecondary: $colorSecondary;
  colorSecondarySupport: $colorSecondarySupport;
  colorBorder: $colorBorder;
  colorDark: $colorDark;
  colorBackground: $colorBackground;

  zIndexOveraly: $zIndexOverlay;

  sizeCanvasPadding: $sizeCanvasPadding;
  sizeWatcherTabs: $sizeWatcherTabs;
  sizeCanvasPaddingMini: $sizeCanvasPaddingMini;

  sizeTopM: $sizeTopM;
  sizeTopS: $sizeTopS;
}

@mixin gradient($primary: $colorPrimary, $secondary: $colorPrimarySupport, $angle: -25deg) {
  background: $primary;
  background: linear-gradient($angle, $primary, $secondary);
  background: -webkit-linear-gradient($angle, $primary, $secondary);
  background: -moz-linear-gradient($angle, $primary, $secondary);
  background: -o-linear-gradient($angle, $primary, $secondary);
}

@mixin gradientPrimary($angle: 45deg) {
  @include gradient($colorPrimary, $colorPrimarySupport, $angle);
}

@mixin gradientSecondary($angle: 45deg) {
  @include gradient($colorSecondary, $colorSecondarySupport, $angle);
}

/*
* Templates
*/

@mixin page_sizer() {
  width: calc(100% - 2 * #{$sizeCanvasPadding});
  max-width: calc(#{$sizeCanvasMaxWidth} - 2 * #{$sizeCanvasPadding});
  padding: 0 $sizeCanvasPadding;
  margin: 0 auto;
  display: flex;
}

@mixin page_sizer_mini() {
  width: calc(100% - 2 * #{$sizeCanvasPaddingMini});
  max-width: calc(#{$sizeCanvasMaxWidth} - 2 * #{$sizeCanvasPaddingMini});
  padding: 0 $sizeCanvasPaddingMini;
  margin: 0 auto;
  display: flex;
}

@mixin button_icon_component() {
  & > .icon,
  .icon {
    width: 20px;
    height: 20px;
    margin-right: 6px;
    margin-left: -10px;
    display: flex;
    align-items: center;
    justify-content: center;
    position: relative;

    i {
      font-size: 12pt;
      position: absolute;
    }
  }
}

@mixin button_icon_component_mini() {
  & > .icon,
  .icon {
    width: 16px;
    height: 16px;
    margin-right: 6px;
    margin-left: -3px;
    display: flex;
    align-items: center;
    justify-content: center;
    position: relative;

    i {
      font-size: 12pt;
      position: absolute;
    }
  }
}

@mixin button_sizer_default {
  & > .container {
    padding: 14px 36px;
    min-height: calc(48px - 2 * 14px);
    border-radius: 40px;
    border: 1px solid transparent;
    min-width: calc(100px - 2 * 36px);
    display: flex;
    justify-content: center;
    align-items: center;
    cursor: pointer;
    user-select: none;

    &:hover,
    &:active,
    &:focus {
      outline: none;
      -webkit-appearance: none;
    }

    & > .label {
      p {
        font-size: $sizeFontButtonDefault;
        font-weight: 700;
        font-family: $fontPrimary;
      }
    }
  }
}
@mixin button_sizer_mini {
  & > .container {
    padding: 6px 10px;
    min-height: calc(36px - 2 * 8px);
    border-radius: 30px;
    min-width: calc(50px - 2 * 12px);
    border: 1px solid transparent;
    display: flex;
    justify-content: center;
    align-items: center;
    cursor: pointer;
    user-select: none;

    &:hover,
    &:active,
    &:focus {
      outline: none;
      -webkit-appearance: none;
    }

    & > .label {
      p {
        font-size: 9pt;
        font-weight: 600;
        font-family: $fontPrimary;
      }
    }
  }
}

@mixin button_default(
  $background: $colorSecondary,
  $color: #ffffff,
  $backgroundHover: darken($background, 10%),
  $colorHover: $color,
  $transition: 0.2s
) {
  & > .container {
    background: $background;
    transition: background $transition;
    border: 1px solid transparent;
    @include button_icon_component;
    & > .icon i,
    & > .label p {
      color: $color;
      transition: color $transition;
    }

    &:hover,
    &:active,
    &:focus {
      background: $backgroundHover;
      transition: background $transition;

      & > .icon i,
      & > .label p {
        color: $colorHover;
        transition: color $transition;
      }
    }
  }
}

@mixin button_outline(
  $outline: $colorSecondary,
  $color: $colorSecondary,
  $outlineHover: darken($outline, 4%),
  $colorHover: $color,
  $background: transparent,
  $backgroundHover: transparent,
  $transition: 0.2s
) {
  & > .container {
    background: $background;
    border: 1px solid $outline;
    transition: background $transition, border $transition;
    @include button_icon_component;
    & > .icon i,
    & > .label p {
      color: $color;
      transition: color $transition;
    }

    &:hover,
    &:active,
    &:focus {
      border: 1px solid $outlineHover;
      background: $backgroundHover;
      transition: background $transition, border $transition;

      & > .icon i,
      & > .label p {
        color: $colorHover;
        transition: color $transition;
      }
    }
  }
}

@mixin button_simple(
  $color: $colorSecondary,
  $colorHover: darken($color, 7%),
  $backgroundHover: transparent,
  $transition: 0.2s
) {
  & > .container {
    background: transparent;
    border: 1px solid transparent;
    transition: background 0.2s;
    @include button_icon_component;
    & > .icon i,
    & > .label p {
      color: $color;
      transition: color 0.2s;
    }

    &:hover,
    &:active,
    &:focus {
      background: $backgroundHover;
      border: 1px solid transparent;
      transition: background 0.2s;
      & > .icon i,
      & > .label p {
        color: $colorHover;
        transition: color 0.2s;
      }
    }
  }
}

@mixin button_default_gray() {
  @include button_default(
    $colorTable_GrayBlue_Light,
    $colorTable_GrayBlue_DarkText,
    darken($colorTable_GrayBlue_Light, 6%),
    darken($colorTable_GrayBlue_DarkText, 5%)
  );
}

@mixin button_outline_gray() {
  @include button_outline(
    $colorTable_GrayBlue_Light,
    lighten($colorTable_GrayBlue_DarkText, 5%),
    darken($colorTable_GrayBlue_Light, 6%),
    darken($colorTable_GrayBlue_DarkText, 5%)
  );
}

@mixin button_simple_gray() {
  @include button_simple($colorTable_GrayBlue_DarkText, darken($colorTable_GrayBlue_DarkText, 5%), #fafafa);
}

@mixin button_default_gray_mini() {
  @include button_default(
    $colorTable_GrayBlue_Light,
    $colorTable_GrayBlue_DarkText,
    darken($colorTable_GrayBlue_Light, 6%),
    darken($colorTable_GrayBlue_DarkText, 5%)
  );
  & > .container {
    @include button_icon_component_mini;
  }
}

@mixin button_outline_gray_mini() {
  @include button_outline(
    $colorTable_GrayBlue_Light,
    lighten($colorTable_GrayBlue_DarkText, 5%),
    darken($colorTable_GrayBlue_Light, 6%),
    darken($colorTable_GrayBlue_DarkText, 5%)
  );
  & > .container {
    @include button_icon_component_mini;
  }
}

@mixin button_simple_gray_mini() {
  @include button_simple($colorTable_GrayBlue_DarkText, darken($colorTable_GrayBlue_DarkText, 5%), #fafafa);
  & > .container {
    @include button_icon_component_mini;
  }
}

@mixin button_gradient_primary() {
  @include button_default();

  & > .container {
    @include gradientPrimary();
    border: none;
    background-size: 150%;
    background-position-x: 0%;
    transition: background 0.2s;
    & > .icon i,
    & > .label p {
      color: #ffffff;
      transition: color 0.2s;
    }

    &:hover,
    &:active,
    &:focus {
      @include gradientPrimary();
      border: none;
      background-size: 150%;
      background-position-x: 50%;
      transition: background 0.2s;
      & > .label p {
        color: #ffffff;
        transition: color 0.2s;
      }
    }
  }
}

@keyframes fade-in {
  from {
    opacity: 0;
  }
  to {
    opacity: 1;
  }
}
@keyframes fade-out {
  from {
    opacity: 1;
  }
  to {
    opacity: 0;
  }
}
@mixin fade-in($duration: 0.2s, $delay: 0s) {
  animation-name: fade-in;
  animation-direction: normal;
  animation-iteration-count: 1;
  animation-fill-mode: forwards;
  animation-duration: $duration;
  animation-delay: $delay;
}

@mixin fade-out($duration: 0.2s, $delay: 0s) {
  animation-name: fade-out;
  animation-direction: normal;
  animation-iteration-count: 1;
  animation-fill-mode: forwards;
  animation-duration: $duration;
  animation-delay: $delay;
}

@mixin ellipsis {
  white-space: nowrap;
  overflow: hidden;
  text-overflow: ellipsis;
}

/*
 * Styles
 */

@mixin Page {
  order: 2;
  width: 100%;
  min-height: calc(100vh - #{$sizeNavHeight});
  background: $colorBackground;
  display: flex;
  flex-direction: column;

  & > * {
    flex-shrink: 0;
  }

  & > .container {
    @include page_sizer;
    z-index: 1;

    & > .content {
      flex: 1;
      max-width: calc(100% - 2 * #{$sizeCanvasPadding});
      padding: $sizeCanvasPadding;
    }
  }
}

/*
 * Normalizer
 */

html {
  overflow-x: hidden;

  * {
    font-family: $fontPrimary;

    -webkit-font-smoothing: antialiased;
    -moz-osx-font-smoothing: grayscale;
  }

  & > body {
    overflow-x: hidden;
  }

  p,
  h1,
  h2,
  h3,
  h4,
  h5 {
    margin-top: 0;
    margin-bottom: 0;
  }

  i {
    line-height: 1.4 !important;
  }
}
